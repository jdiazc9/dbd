# add metadata for each run
metadata <- read.csv('../simul_params/dbd_corr_vs_params.txt', sep = '\t')
source("~/projects/dbd/github/dbd/scripts/dbd_analyzeSimuls.R", echo=TRUE)
read.csv('../simul_params/dbd_corr_vs_params.txt', sep = ',')
meatadata <- read.csv('../simul_params/dbd_corr_vs_params.txt', sep = ',')
write.table(meatadata, '../simul_params/dbd_corr_vs_params.txt', sep = '\t', row.names = F, col.names = T)
source("~/projects/dbd/github/dbd/scripts/dbd_analyzeSimuls.R", echo=TRUE)
# plot
ggplot(dbd_corr[dbd_corr$time == 'T20', ], aes(x = group, y = slope)) +
geom_boxplot(fill = NA,
width = 0.5,
outlier.shape = NA) +
geom_jitter(width = 0.15) +
scale_y_continuous(name = 'DBD slope') +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
# plot
ggplot(dbd_corr[dbd_corr$time == 'T20', ], aes(x = group, y = slope)) +
geom_boxplot(fill = NA,
width = 0.5,
outlier.shape = NA) +
geom_jitter(width = 0.15) +
scale_y_continuous(name = 'DBD slope') +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
# plot
ggplot(dbd_corr[dbd_corr$time == 'T20', ], aes(x = group, y = slope)) +
geom_boxplot(fill = NA,
width = 0.5,
outlier.shape = NA) +
geom_jitter(width = 0.15) +
scale_y_continuous(name = 'DBD slope') +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
ggsave('../plots/simul_slopes.pdf',
width = 100,
height = 80,
units = 'mm',
dpi = 600)
ggsave('../plots/simul_slopes.pdf',
width = 150,
height = 150,
units = 'mm',
dpi = 600)
source("~/projects/dbd/github/dbd/scripts/null_model.R", echo=TRUE)
install.packages('reshape2')
source("~/projects/dbd/github/dbd/scripts/null_model.R", echo=TRUE)
source("~/projects/dbd/github/dbd/scripts/null_model.R", echo=TRUE)
source("~/projects/dbd/github/dbd/scripts/dbd_analyzeSimuls.R", echo=TRUE)
ggplot(dbd_corr[dbd_corr$time == 'T20', ], aes(x = group, y = slope)) +
geom_violin()
# plot
ggplot(dbd_corr[dbd_corr$time == 'T20', ], aes(x = group, y = slope)) +
geom_boxplot(fill = NA,
width = 0.5,
outlier.shape = NA) +
geom_jitter(width = 0.15) +
scale_y_continuous(name = 'DBD slope') +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
# we now *randomly* assemble 10000 communities of specified richness (matching the richness observed in the simulations)
inoc <- read.csv('../data/inoc.csv')
makeRandomCommunity <- function(target_richness) {
current_richness <- 0
community <- rep(0, nrow(inoc))
while (current_richness < target_richness) {
sampled_species <- sample(1:nrow(inoc), 1, prob = inoc$Relative_Abundance.avg)
community[sampled_species] <- community[sampled_species] + 1
current_richness <- sum(community > 0)
}
# get # of families and # of focal species in randomly assembled community
community <- cbind(inoc[, c('Family', 'ESV')], abundance = community)
families <- data.frame(Family = unique(community$Family))
families$abundance <- sapply(families$Family,
FUN = function(fam) sum(community$abundance[community$Family == fam]))
focal_family <- families$Family[which.max(families$abundance)][1]
n_focalSpecies <- sum(community$abundance[community$Family == focal_family] > 0)
n_nonFocalFamilies <- sum(families$abundance[families$Family != focal_family] > 0)
return(c(n_focalSpecies = n_focalSpecies,
n_nonFocalFamilies = n_nonFocalFamilies))
}
null_dbd <- lapply(n_species, FUN = makeRandomCommunity)
null_dbd <- as.data.frame(do.call(rbind, null_dbd))
# get null expectation for dbd slope
slope_null <- lm(data = null_dbd, formula = n_focalSpecies ~ n_nonFocalFamilies)$coefficients[2]
ggplot(null_dbd, aes(x = n_nonFocalFamilies, y = n_focalSpecies)) +
geom_point(alpha = 0.25) +
geom_smooth(method = 'lm')
View(null_dbd)
null_i <- null_dbd[sample(1:nrow(null_dbd), 100), ]
slope_i <- lm(null_i, formula = n_focalSpecies ~ n_nonFocalFamilies)
summary(slope_i)
# get distribution of slopes under null model
null_slopes <- sapply(1:1000,
FUN = function(i) {
null_i <- null_dbd[sample(1:nrow(null_dbd), 100), ]
slope_i <- lm(null_i, formula = n_focalSpecies ~ n_nonFocalFamilies)$coefficients[2]
return(slope_i)
})
null_slopes
ggplot(null_dbd, aes(x = n_nonFocalFamilies, y = n_focalSpecies)) +
geom_point(alpha = 0.25) +
geom_smooth(method = 'lm')
View(dbd_corr)
max(dbd_corr$pval)
# get distribution of slopes under null model
null_slopes <- sapply(1:1000,
FUN = function(i) {
null_i <- null_dbd[sample(1:nrow(null_dbd), 100), ]
slope_i <- lm(null_i, formula = n_focalSpecies ~ n_nonFocalFamilies)$coefficients[2]
return(slope_i)
})
plot_this <- rbind(cbind(group = 'null',
slope = null_slopes),
cbind(group = 'simul',
slope = dbd_corr$slope[dbd_corr$time == 'T20']))
ggplot(plot_this, aes(x = group, y = slope)) +
geom_boxplot()
plot_this <- rbind(data.frame(group = 'null',
slope = null_slopes),
cbind(group = 'simul',
slope = dbd_corr$slope[dbd_corr$time == 'T20']))
View(plot_this)
# get distribution of slopes under null model
null_slopes <- sapply(1:100,
FUN = function(i) {
null_i <- null_dbd[sample(1:nrow(null_dbd), 100), ]
slope_i <- lm(null_i, formula = n_focalSpecies ~ n_nonFocalFamilies)$coefficients[2]
return(slope_i)
})
ggplot(null_dbd, aes(x = n_nonFocalFamilies, y = n_focalSpecies)) +
geom_point(alpha = 0.25) +
geom_smooth(method = 'lm',
formula = y~x)
plot_this <- rbind(data.frame(group = 'null',
slope = null_slopes),
cbind(group = 'simul',
slope = dbd_corr$slope[dbd_corr$time == 'T20']))
ggplot(plot_this, aes(x = group, y = slope)) +
geom_boxplot()
View(plot_this)
plot_this$slope
plot_this <- rbind(data.frame(group = 'null',
slope = as.numeric(null_slopes)),
cbind(group = 'simul',
slope = dbd_corr$slope[dbd_corr$time == 'T20']))
ggplot(plot_this, aes(x = group, y = slope)) +
geom_boxplot()
dbd_corr$slope[dbd_corr$time == 'T20']
plot_this <- rbind(data.frame(group = 'null',
slope = as.numeric(null_slopes)),
data.frame(group = 'simul',
slope = dbd_corr$slope[dbd_corr$time == 'T20']))
plot_this$slope
ggplot(plot_this, aes(x = group, y = slope)) +
geom_boxplot()
ggplot(plot_this, aes(x = group, y = slope)) +
geom_boxplot(fill = NA,
width = 0.5,
outlier.shape = NA) +
geom_jitter(width = 0.15)
ggplot(plot_this, aes(x = group, y = slope)) +
geom_boxplot(fill = NA,
width = 0.5,
outlier.shape = NA) +
geom_jitter(width = 0.15) +
scale_y_continuous(name = 'DBD slope') +
theme_bw() +
theme(aspect.ratio = 1.6,
panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
ggsave('../plots/simul_vs_null_slopes.pdf',
width = 150,
height = 150,
units = 'mm',
dpi = 600)
source("~/projects/dbd/github/dbd/scripts/null_model.R", echo=TRUE)
warnings()
